{"version":3,"sources":["../src/button.js"],"names":["$","NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","fn","ClassName","ACTIVE","BUTTON","FOCUS","Selector","DATA_TOGGLE_CARROT","DATA_TOGGLE","INPUT","Event","CLICK_DATA_API","FOCUS_BLUR_DATA_API","Button","element","_element","triggerChangeEvent","addAriaPressed","rootElement","closest","input","find","type","checked","hasClass","activeElement","removeClass","hasAttribute","classList","contains","trigger","focus","setAttribute","toggleClass","removeData","config","each","data","document","on","event","preventDefault","button","target","_jQueryInterface","call","test","Constructor","noConflict"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;;AAEA;;;;;;;AAOA;;;;;;AAMA,IAAMC,OAAsB,QAA5B;AACA,IAAMC,UAAsB,eAA5B;AACA,IAAMC,WAAsB,WAA5B;AACA,IAAMC,kBAA0BD,QAAhC;AACA,IAAME,eAAsB,WAA5B;AACA,IAAMC,qBAAsBN,EAAEO,EAAF,CAAKN,IAAL,CAA5B;;AAEA,IAAMO,YAAY;AAChBC,UAAS,QADO;AAEhBC,UAAS,KAFO;AAGhBC,SAAS;AAHO,CAAlB;;AAMA,IAAMC,WAAW;AACfC,sBAAqB,yBADN;AAEfC,eAAqB,yBAFN;AAGfC,SAAqB,OAHN;AAIfN,UAAqB,SAJN;AAKfC,UAAqB;AALN,CAAjB;;AAQA,IAAMM,QAAQ;AACZC,4BAA8Bb,SAA9B,GAA0CC,YAD9B;AAEZa,uBAAsB,UAAQd,SAAR,GAAoBC,YAApB,mBACOD,SADP,GACmBC,YADnB;;AAKxB;;;;;;AAPc,CAAd;IAaqBc,M;AAEnB,kBAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKC,QAAL,GAAgBD,OAAhB;AACD;;AAGD;;;;;;AAOA;;6BAES;AACP,UAAIE,qBAAqB,IAAzB;AACA,UAAIC,iBAAiB,IAArB;AACA,UAAMC,cAAmBxB,EAAE,KAAKqB,QAAP,EAAiBI,OAAjB,CACvBb,SAASE,WADc,EAEvB,CAFuB,CAAzB;;AAIA,UAAIU,WAAJ,EAAiB;AACf,YAAME,QAAQ1B,EAAE,KAAKqB,QAAP,EAAiBM,IAAjB,CAAsBf,SAASG,KAA/B,EAAsC,CAAtC,CAAd;;AAEA,YAAIW,KAAJ,EAAW;AACT,cAAIA,MAAME,IAAN,KAAe,OAAnB,EAA4B;AAC1B,gBAAIF,MAAMG,OAAN,IACF7B,EAAE,KAAKqB,QAAP,EAAiBS,QAAjB,CAA0BtB,UAAUC,MAApC,CADF,EAC+C;AAC7Ca,mCAAqB,KAArB;AAED,aAJD,MAIO;AACL,kBAAMS,gBAAgB/B,EAAEwB,WAAF,EAAeG,IAAf,CAAoBf,SAASH,MAA7B,EAAqC,CAArC,CAAtB;;AAEA,kBAAIsB,aAAJ,EAAmB;AACjB/B,kBAAE+B,aAAF,EAAiBC,WAAjB,CAA6BxB,UAAUC,MAAvC;AACD;AACF;AACF;;AAED,cAAIa,kBAAJ,EAAwB;AACtB,gBAAII,MAAMO,YAAN,CAAmB,UAAnB,KACFT,YAAYS,YAAZ,CAAyB,UAAzB,CADE,IAEFP,MAAMQ,SAAN,CAAgBC,QAAhB,CAAyB,UAAzB,CAFE,IAGFX,YAAYU,SAAZ,CAAsBC,QAAtB,CAA+B,UAA/B,CAHF,EAG8C;AAC5C;AACD;AACDT,kBAAMG,OAAN,GAAgB,CAAC7B,EAAE,KAAKqB,QAAP,EAAiBS,QAAjB,CAA0BtB,UAAUC,MAApC,CAAjB;AACAT,cAAE0B,KAAF,EAASU,OAAT,CAAiB,QAAjB;AACD;;AAEDV,gBAAMW,KAAN;AACAd,2BAAiB,KAAjB;AACD;AAEF;;AAED,UAAIA,cAAJ,EAAoB;AAClB,aAAKF,QAAL,CAAciB,YAAd,CAA2B,cAA3B,EACE,CAACtC,EAAE,KAAKqB,QAAP,EAAiBS,QAAjB,CAA0BtB,UAAUC,MAApC,CADH;AAED;;AAED,UAAIa,kBAAJ,EAAwB;AACtBtB,UAAE,KAAKqB,QAAP,EAAiBkB,WAAjB,CAA6B/B,UAAUC,MAAvC;AACD;AACF;;;8BAES;AACRT,QAAEwC,UAAF,CAAa,KAAKnB,QAAlB,EAA4BlB,QAA5B;AACA,WAAKkB,QAAL,GAAgB,IAAhB;AACD;;AAGD;;;;qCAEwBoB,M,EAAQ;AAC9B,aAAO,KAAKC,IAAL,CAAU,YAAY;AAC3B,YAAIC,OAAO3C,EAAE,IAAF,EAAQ2C,IAAR,CAAaxC,QAAb,CAAX;;AAEA,YAAI,CAACwC,IAAL,EAAW;AACTA,iBAAO,IAAIxB,MAAJ,CAAW,IAAX,CAAP;AACAnB,YAAE,IAAF,EAAQ2C,IAAR,CAAaxC,QAAb,EAAuBwC,IAAvB;AACD;;AAED,YAAIF,WAAW,QAAf,EAAyB;AACvBE,eAAKF,MAAL;AACD;AACF,OAXM,CAAP;AAYD;;;wBAhFoB;AACnB,aAAOvC,OAAP;AACD;;;;;AAiFH;;;;;;eA5FqBiB,M;AAkGrBnB,EAAE4C,QAAF,EACGC,EADH,CACM7B,MAAMC,cADZ,EAC4BL,SAASC,kBADrC,EACyD,UAACiC,KAAD,EAAW;AAChEA,QAAMC,cAAN;;AAEA,MAAIC,SAASF,MAAMG,MAAnB;;AAEA,MAAI,CAACjD,EAAEgD,MAAF,EAAUlB,QAAV,CAAmBtB,UAAUE,MAA7B,CAAL,EAA2C;AACzCsC,aAAShD,EAAEgD,MAAF,EAAUvB,OAAV,CAAkBb,SAASF,MAA3B,CAAT;AACD;;AAEDS,SAAO+B,gBAAP,CAAwBC,IAAxB,CAA6BnD,EAAEgD,MAAF,CAA7B,EAAwC,QAAxC;AACD,CAXH,EAYGH,EAZH,CAYM7B,MAAME,mBAZZ,EAYiCN,SAASC,kBAZ1C,EAY8D,UAACiC,KAAD,EAAW;AACrE,MAAME,SAAShD,EAAE8C,MAAMG,MAAR,EAAgBxB,OAAhB,CAAwBb,SAASF,MAAjC,EAAyC,CAAzC,CAAf;AACAV,IAAEgD,MAAF,EAAUT,WAAV,CAAsB/B,UAAUG,KAAhC,EAAuC,eAAeyC,IAAf,CAAoBN,MAAMlB,IAA1B,CAAvC;AACD,CAfH;;AAiBA;;;;;;AAMA5B,EAAEO,EAAF,CAAKN,IAAL,IAAyBkB,OAAO+B,gBAAhC;AACAlD,EAAEO,EAAF,CAAKN,IAAL,EAAWoD,WAAX,GAAyBlC,MAAzB;AACAnB,EAAEO,EAAF,CAAKN,IAAL,EAAWqD,UAAX,GAAyB,YAAY;AACnCtD,IAAEO,EAAF,CAAKN,IAAL,IAAaK,kBAAb;AACA,SAAOa,OAAO+B,gBAAd;AACD,CAHD","file":"button.js","sourcesContent":["import $ from 'jquery'\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.6): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME                = 'button'\nconst VERSION             = '4.0.0-alpha.6'\nconst DATA_KEY            = 'bs.button'\nconst EVENT_KEY           = `.${DATA_KEY}`\nconst DATA_API_KEY        = '.data-api'\nconst JQUERY_NO_CONFLICT  = $.fn[NAME]\n\nconst ClassName = {\n  ACTIVE : 'active',\n  BUTTON : 'btn',\n  FOCUS  : 'focus'\n}\n\nconst Selector = {\n  DATA_TOGGLE_CARROT : '[data-toggle^=\"button\"]',\n  DATA_TOGGLE        : '[data-toggle=\"buttons\"]',\n  INPUT              : 'input',\n  ACTIVE             : '.active',\n  BUTTON             : '.btn'\n}\n\nconst Event = {\n  CLICK_DATA_API      : `click${EVENT_KEY}${DATA_API_KEY}`,\n  FOCUS_BLUR_DATA_API : `focus${EVENT_KEY}${DATA_API_KEY} `\n                      + `blur${EVENT_KEY}${DATA_API_KEY}`\n}\n\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nexport default class Button {\n\n  constructor(element) {\n    this._element = element\n  }\n\n\n  // getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n\n  // public\n\n  toggle() {\n    let triggerChangeEvent = true\n    let addAriaPressed = true\n    const rootElement      = $(this._element).closest(\n      Selector.DATA_TOGGLE\n    )[0]\n\n    if (rootElement) {\n      const input = $(this._element).find(Selector.INPUT)[0]\n\n      if (input) {\n        if (input.type === 'radio') {\n          if (input.checked &&\n            $(this._element).hasClass(ClassName.ACTIVE)) {\n            triggerChangeEvent = false\n\n          } else {\n            const activeElement = $(rootElement).find(Selector.ACTIVE)[0]\n\n            if (activeElement) {\n              $(activeElement).removeClass(ClassName.ACTIVE)\n            }\n          }\n        }\n\n        if (triggerChangeEvent) {\n          if (input.hasAttribute('disabled') ||\n            rootElement.hasAttribute('disabled') ||\n            input.classList.contains('disabled') ||\n            rootElement.classList.contains('disabled')) {\n            return\n          }\n          input.checked = !$(this._element).hasClass(ClassName.ACTIVE)\n          $(input).trigger('change')\n        }\n\n        input.focus()\n        addAriaPressed = false\n      }\n\n    }\n\n    if (addAriaPressed) {\n      this._element.setAttribute('aria-pressed',\n        !$(this._element).hasClass(ClassName.ACTIVE))\n    }\n\n    if (triggerChangeEvent) {\n      $(this._element).toggleClass(ClassName.ACTIVE)\n    }\n  }\n\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n    this._element = null\n  }\n\n\n  // static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n\n      if (!data) {\n        data = new Button(this)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (config === 'toggle') {\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document)\n  .on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, (event) => {\n    event.preventDefault()\n\n    let button = event.target\n\n    if (!$(button).hasClass(ClassName.BUTTON)) {\n      button = $(button).closest(Selector.BUTTON)\n    }\n\n    Button._jQueryInterface.call($(button), 'toggle')\n  })\n  .on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, (event) => {\n    const button = $(event.target).closest(Selector.BUTTON)[0]\n    $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type))\n  })\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME]             = Button._jQueryInterface\n$.fn[NAME].Constructor = Button\n$.fn[NAME].noConflict  = function () {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Button._jQueryInterface\n}\n"]}