{"version":3,"sources":["../src/util.js"],"names":["$","transition","MAX_UID","TransitionEndEvent","WebkitTransition","MozTransition","OTransition","toType","obj","toString","call","match","toLowerCase","isElement","nodeType","getSpecialTransitionEndEvent","bindType","end","delegateType","handle","event","target","is","handleObj","handler","apply","arguments","undefined","transitionEndTest","window","QUnit","el","document","createElement","name","style","transitionEndEmulator","duration","called","one","Util","TRANSITION_END","setTimeout","triggerTransitionEnd","setTransitionEndSupport","fn","emulateTransitionEnd","supportsTransitionEnd","special","getUID","prefix","Math","random","getElementById","getSelectorFromElement","element","selector","getAttribute","$selector","length","error","reflow","offsetHeight","trigger","Boolean","typeCheckConfig","componentName","config","configTypes","property","hasOwnProperty","expectedTypes","value","valueType","RegExp","test","Error","toUpperCase","ready"],"mappings":"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","file":"util.js","sourcesContent":["import $ from 'jquery'\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.0.0-alpha.6): util.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * ------------------------------------------------------------------------\n * Private TransitionEnd Helpers\n * ------------------------------------------------------------------------\n */\n\nlet transition = false\n\nconst MAX_UID = 1000000\n\nconst TransitionEndEvent = {\n  WebkitTransition : 'webkitTransitionEnd',\n  MozTransition    : 'transitionend',\n  OTransition      : 'oTransitionEnd otransitionend',\n  transition       : 'transitionend'\n}\n\n// shoutout AngusCroll (https://goo.gl/pxwQGp)\nfunction toType(obj) {\n  return {}.toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase()\n}\n\nfunction isElement(obj) {\n  return (obj[0] || obj).nodeType\n}\n\nfunction getSpecialTransitionEndEvent() {\n  return {\n    bindType: transition.end,\n    delegateType: transition.end,\n    handle(event) {\n      if ($(event.target).is(this)) {\n        return event.handleObj.handler.apply(this, arguments) // eslint-disable-line prefer-rest-params\n      }\n      return undefined\n    }\n  }\n}\n\nfunction transitionEndTest() {\n  if (window.QUnit) {\n    return false\n  }\n\n  const el = document.createElement('bootstrap')\n\n  for (const name in TransitionEndEvent) {\n    if (el.style[name] !== undefined) {\n      return {\n        end: TransitionEndEvent[name]\n      }\n    }\n  }\n\n  return false\n}\n\nfunction transitionEndEmulator(duration) {\n  let called = false\n\n  $(this).one(Util.TRANSITION_END, () => {\n    called = true\n  })\n\n  setTimeout(() => {\n    if (!called) {\n      Util.triggerTransitionEnd(this)\n    }\n  }, duration)\n\n  return this\n}\n\nfunction setTransitionEndSupport() {\n  transition = transitionEndTest()\n\n  $.fn.emulateTransitionEnd = transitionEndEmulator\n\n  if (Util.supportsTransitionEnd()) {\n    $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent()\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst Util = {\n\n  TRANSITION_END: 'bsTransitionEnd',\n\n  getUID(prefix) {\n    do {\n      // eslint-disable-next-line no-bitwise\n      prefix += ~~(Math.random() * MAX_UID) // \"~~\" acts like a faster Math.floor() here\n    } while (document.getElementById(prefix))\n    return prefix\n  },\n\n  getSelectorFromElement(element) {\n    let selector = element.getAttribute('data-target')\n    if (!selector || selector === '#') {\n      selector = element.getAttribute('href') || ''\n    }\n\n    try {\n      const $selector = $(selector)\n      return $selector.length > 0 ? selector : null\n    } catch (error) {\n      return null\n    }\n  },\n\n  reflow(element) {\n    return element.offsetHeight\n  },\n\n  triggerTransitionEnd(element) {\n    $(element).trigger(transition.end)\n  },\n\n  supportsTransitionEnd() {\n    return Boolean(transition)\n  },\n\n  typeCheckConfig(componentName, config, configTypes) {\n    for (const property in configTypes) {\n      if (configTypes.hasOwnProperty(property)) {\n        const expectedTypes = configTypes[property]\n        const value         = config[property]\n        const valueType     = value && isElement(value) ?\n                              'element' : toType(value)\n\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new Error(\n            `${componentName.toUpperCase()}: ` +\n            `Option \"${property}\" provided type \"${valueType}\" ` +\n            `but expected type \"${expectedTypes}\".`)\n        }\n      }\n    }\n  }\n}\n\nexport default Util\n\n$(document).ready(() => {\n  setTransitionEndSupport()\n})\n"]}